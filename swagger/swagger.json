{
  "swagger": "2.0",
  "info": {
    "title": "Bank Argent API documentation",
    "description": "Contains all available API endpoints in this codebase",
    "version": "1.0.0",
    "termsOfService": "http://swagger.io/terms/"
  },
  "host": "localhost:3001",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/login": {
      "post": {
        "tags": [
          "User Module"
        ],
        "summary": "Login",
        "description": "API for Login",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login Payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Login Successfully",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Invalid Fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "tags": [
          "User Module"
        ],
        "summary": "Signup",
        "description": "API for Signup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Signup Payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Signup Successfully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Invalid Fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/profile": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "User Module"
        ],
        "summary": "User Profile API",
        "description": "API for fetching a user profile",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Attach Bearer JWT token",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Invalid Fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "User Module"
        ],
        "summary": "User Profile API",
        "description": "API for updating a user profile",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "description": "Attach Bearer JWT token",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Update user profile attributes",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successully",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Invalid Fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Accounts Module"
        ],
        "summary": "User Accounts API",
        "description": "get API for all accounts",
        "parameters": [
          {
            "in": "body",
            "name": "profile",
            "description": "User's account ID",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Accounts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction retrieved successully"
          },
          "400": {
            "description": "Id must be in Integer"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/profile/{accountId}": {
      "get": {
        "tags": [
          "Transaction Module"
        ],
        "summary": "User Account's Transaction API",
        "description": "get all transaction of the selected Account",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Attach Bearer JWT token",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "accountId",
            "description": "User's account ID",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions retrieved successully",
            "schema": {
              "$ref": "#/definitions/Transactions"
            }
          },
          "400": {
            "description": "Id must be in Integer"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/profile/{accountId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transaction Module"
        ],
        "summary": "User Transaction details API",
        "description": "get API for all accounts",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Attach Bearer JWT token",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "accountId",
            "description": "User's account ID",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "transactionId",
            "description": "get transactionId in integer format",
            "type": "string",
            "required": true
          },
          {
            "name": "transactions",
            "in": "body",
            "description": "get transaction detail",
            "schema": {
              "$ref": "#/definitions/TransactionDetailUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved Transaction Details successfully"
          },
          "400": {
            "description": "Invalid Fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/transactions/{transactionId}/category": {
      "get": {
        "tags": [
          "Transaction Module"
        ],
        "summary": "Category list API",
        "description": "Get the list of all categories",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Attach Bearer JWT token",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "transactionId",
            "description": "get transactionId in integer format",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "categories",
            "description": "get category list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Categories"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved Category list successfully"
          },
          "400": {
            "description": "Invalid Fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/transactions/{transactionsId}/category/categoryId": {
      "put": {
        "tags": [
          "Transaction Category"
        ],
        "summary": "Update transaction's category",
        "description": "API for updating a transaction's category",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Attach Bearer JWT token",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "transactionsId",
            "description": "Transaction's ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Update transaction's category",
            "schema": {
              "$ref": "#/definitions/UpdateCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction updated successully"
          },
          "400": {
            "description": "invalid fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/transactions/{transactionId}/notes": {
      "get": {
        "tags": [
          "Transaction Module"
        ],
        "summary": "Notes list API",
        "description": "Get the list of all notes",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Attach Bearer JWT token",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "transactionId",
            "description": "get transactionId in integer format",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "notes",
            "description": "get notes list",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved Notes list successfully"
          },
          "400": {
            "description": "Invalid Fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/transactions/{transactionId}/notes/": {
      "put": {
        "tags": [
          "Transaction Notes"
        ],
        "summary": "Update transaction's notes",
        "description": "API for updating transaction's notes",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Attach Bearer JWT token",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "transactionId",
            "description": "Transaction's ID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Update transaction notes",
            "schema": {
              "$ref": "#/definitions/UpdateNotes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction updated successully"
          },
          "400": {
            "description": "Invalid fields"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "properties": {
        "email": {
          "type": "string",
          "description": "user email"
        },
        "password": {
          "type": "string",
          "description": "user password"
        },
        "firstName": {
          "type": "string",
          "description": "user first name"
        },
        "lastName": {
          "type": "string",
          "description": "user last name"
        }
      }
    },
    "Login": {
      "properties": {
        "email": {
          "type": "string",
          "description": "user email"
        },
        "password": {
          "type": "string",
          "description": "user password"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "body": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "email": {
              "type": "string"
            }
          }
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "UserProfile": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "user First Name"
        },
        "lastName": {
          "type": "string",
          "description": "user Last Name"
        }
      }
    },
    "Accounts": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "balance": {
          "type": "integer"
        }
      }
    },
    "Transactions": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "Transaction ID"
        },
        "date": {
          "type": "string",
          "description": "Transaction Date"
        },
        "description": {
          "type": "string",
          "description": "Transaction Description"
        },
        "amount": {
          "type": "integer",
          "description": "The amount of Transaction"
        },
        "balance": {
          "type": "integer",
          "description": "Available balance amount after transaction"
        }
      }
    },
    "TransactionDetailUpdate": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        }
      }
    },
    "Categories": {
      "type": "string",
      "enum": [
        "Food",
        "Clothes",
        "Telephone",
        "Fuel",
        "Charges",
        "Loisir",
        "Other"
      ]
    },
    "Notes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "UpdateCategory": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        }
      }
    },
    "UpdateNotes": {
      "type": "object",
      "properties": {
        "notes": {
          "type": "string"
        }
      }
    }
  }
}